<%- include(headerPath) %>
<style>
    li.buttons-columnVisibility a {
        cursor:pointer;
        }
    li.buttons-columnVisibility.active a {
        background-color:transparent;
        color:inherit; 
        }
    li.buttons-columnVisibility.active a:hover {
        background-color:#f5f5f5;
        color:inherit;
        }
    li.buttons-columnVisibility a:before {
        width:25px;
        font-family:"Glyphicons Halflings";
        content:"\e013";
        color:transparent;
        padding-right:10px;
        }
    li.buttons-columnVisibility.active a:before {
        color:inherit;
        }
    #table_filter label { min-width: 100%;}
    #table_filter label input{ min-width: 100%;}
    .expand {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        max-width: 20vw;
    }
    .expand:hover {
        white-space: normal;
    }
    .ui-timepicker-container {
        z-index: 1060 !important; /* Ensure it's higher than the modal's z-index */
    }
    .chart-div {
      width: 100%; /* Adjust to your layout */
      height: 300px; /* Explicitly set height */
    }
</style>
<div class="content-wrapper">
    <div class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-12">
                    <h1 class="m-0">Reject Pareto
                    </h1>
                </div>
            </div>
        </div>
    </div>
    <section class="content">
        <div class="container-fluid">
            <div class="row">
				<div class="col-lg-12 col-12">
					<div class="card">
                        <div class="card-header">
                            <div class="row">
                                <div class="col-md-6"></div>
                                <div class="col-md-3">
                                    <input type="text" id="start-date" class="form-control mr-2 datepicker" size="35" placeholder="Start Date">
                                </div>
                                <div class="col-md-2">
                                    <select id="shift-selector" class="form-control mr-2">
                                        <option value="all">All Shifts</option>
                                        <option value="shift1">Shift 1</option>
                                        <option value="shift2">Shift 2</option>
                                        <option value="shift3">Shift 3</option>
                                    </select>
                                </div>
                                <div class="col-md-1">
                                    <button id="apply-filters" class="btn btn-primary btn-sm">Apply</button>
                                </div>
                            </div>
						</div>
                        <div class="card-body">
                            <div class="card-body chart-div" id="pareto-category">
                            </div>
                            <div class="card-body chart-div" id="pareto-product">
                            </div>
                            <div class="card-body chart-div" id="pareto-machine">
                            </div>
						</div>
						<div class="card-body">
                            <table id="table" class="table" cellspacing="0" width="100%">
                                <thead>
                                    <tr>
                                        <th class="text-center">Shift</th>
                                        <th class="text-center">Added</th>
                                        <th class="text-center">Machine</th>
                                        <th class="text-center">Product</th>
                                        <th class="text-center">Category</th>
                                        <th class="text-center">Qty</th>
                                        <th class="text-center">Reason</th>
                                        <th class="text-center">Operator</th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
						</div>
					</div>
				</div>
			</div>
        </div>
    </section>
</div>
<script type="text/javascript">
    
    document.addEventListener('DOMContentLoaded', function () {
        let startDate, endDate, shift

        const shiftSelector = document.getElementById('shift-selector')
        const startDateInput = document.getElementById('start-date')

        function onDateRangeSelected(start, end, label) {
            startDate = start.format('YYYY-MM-DD')
            endDate = end.format('YYYY-MM-DD')
            var today = moment().format("YYYY-MM-DD")
            sendReportRequest()
        }

        $('#start-date').daterangepicker({
            "showDropdowns": true,
            ranges: {
                'Today': [moment(), moment()],
                'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                'This Month': [moment().startOf('month'), moment().endOf('month')],
                'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
            },
            "alwaysShowCalendars": true,
            "startDate": moment().startOf('month'),
            "endDate": moment().endOf('month'),
        }, onDateRangeSelected)

        shiftSelector.addEventListener('change', function () {
            const dateRangePicker = $('#start-date').data('daterangepicker')
            onDateRangeSelected(dateRangePicker.startDate, dateRangePicker.endDate, null)
        });

        const applyFiltersButton = document.getElementById('apply-filters')
        applyFiltersButton.addEventListener('click', function() {
            sendReportRequest()
        });
        initialize()
        function initialize(){
            const dateRangePicker = $('#start-date').data('daterangepicker')
            onDateRangeSelected(dateRangePicker.startDate, dateRangePicker.endDate, null)
        }
        function sendReportRequest(){
            shift = document.getElementById('shift-selector').value;
        
            axios.get(`/production/rejectParetoChart`, {
                params: {
                    startDate: startDate,
                    endDate: endDate,
                    shift: shift,
                }
            })
            .then(response => {
                const categoryDom = document.getElementById('pareto-category');
                if (categoryDom) {
                    const categoryChart = echarts.init(categoryDom)
                    const option = {
                        tooltip: {
                            trigger: 'axis',
                            axisPointer: { type: 'cross' }
                        },
                        xAxis: {
                            type: 'category',
                            data: response.data.data.categoryChart.category,
                            axisLabel: {
                                rotate: 45
                            }
                        },
                        yAxis: [
                            {
                                type: 'value',
                                name: 'Reject Qty',
                            },
                            {
                                type: 'value',
                                name: '%',
                                position: 'right',
                                min: 0,
                                max: 100,
                                axisLabel: { formatter: '{value} %' }
                            }
                        ],
                        grid: {
                            top: '15%',
                            bottom: '10%',
                            left: '5%',
                            right: '5%',
                            containLabel: true,
                        },
                        series: [
                            {
                                name: 'Reject Qty',
                                type: 'bar',
                                data: response.data.data.categoryChart.data,
                                smooth: true,
                                barWidth: '40%',
                                itemStyle: {
                                    color: '#5470C6'
                                }
                            },
                            {
                                name: 'Cumulative %',
                                type: 'line',
                                yAxisIndex: 1,
                                data: response.data.data.categoryChart.persen,
                                smooth: true,
                                symbol: 'circle',
                                symbolSize: 8,
                                itemStyle: {
                                    color: '#91CC75'
                                }
                            }
                        ],
                    };
                    categoryChart.setOption(option)
                }

                const productDom = document.getElementById('pareto-product');
                if (productDom) {
                    const productChart = echarts.init(productDom)
                    const option = {
                        tooltip: {
                            trigger: 'axis',
                            axisPointer: { type: 'cross' }
                        },
                        xAxis: {
                            type: 'category',
                            data: response.data.data.productChart.category,
                            axisLabel: {
                                rotate: 45
                            }
                        },
                        yAxis: [
                            {
                                type: 'value',
                                name: 'Reject Qty',
                            },
                            {
                                type: 'value',
                                name: '%',
                                position: 'right',
                                min: 0,
                                max: 100,
                                axisLabel: { formatter: '{value} %' }
                            }
                        ],
                        grid: {
                            top: '15%',
                            bottom: '10%',
                            left: '5%',
                            right: '5%',
                            containLabel: true,
                        },
                        series: [
                            {
                                name: 'Reject Qty',
                                type: 'bar',
                                data: response.data.data.productChart.data,
                                smooth: true,
                                barWidth: '40%',
                                itemStyle: {
                                    color: '#5470C6'
                                }
                            },
                            {
                                name: 'Cumulative %',
                                type: 'line',
                                yAxisIndex: 1,
                                data: response.data.data.productChart.persen,
                                smooth: true,
                                symbol: 'circle',
                                symbolSize: 8,
                                itemStyle: {
                                    color: '#91CC75'
                                }
                            }
                        ],
                    };
                    productChart.setOption(option)
                }

                const machineDom = document.getElementById('pareto-machine');
                if (machineDom) {
                    const machineChart = echarts.init(machineDom)
                    const option = {
                        tooltip: {
                            trigger: 'axis',
                            axisPointer: { type: 'cross' }
                        },
                        xAxis: {
                            type: 'category',
                            data: response.data.data.machineChart.category,
                            axisLabel: {
                                rotate: 45
                            }
                        },
                        yAxis: [
                            {
                                type: 'value',
                                name: 'Reject Qty',
                            },
                            {
                                type: 'value',
                                name: '%',
                                position: 'right',
                                min: 0,
                                max: 100,
                                axisLabel: { formatter: '{value} %' }
                            }
                        ],
                        grid: {
                            top: '15%',
                            bottom: '10%',
                            left: '5%',
                            right: '5%',
                            containLabel: true,
                        },
                        series: [
                            {
                                name: 'Reject Qty',
                                type: 'bar',
                                data: response.data.data.machineChart.data,
                                smooth: true,
                                barWidth: '40%',
                                itemStyle: {
                                    color: '#5470C6'
                                }
                            },
                            {
                                name: 'Cumulative %',
                                type: 'line',
                                yAxisIndex: 1,
                                data: response.data.data.machineChart.persen,
                                smooth: true,
                                symbol: 'circle',
                                symbolSize: 8,
                                itemStyle: {
                                    color: '#91CC75'
                                }
                            }
                        ],
                    };
                    machineChart.setOption(option)
                }
                table.ajax.reload()
            })
            .catch(error => {
                console.error('There was an error loading the report:', error)
            });
        }

        var table;
        $(document).ready(function() {
            table = $('#table').DataTable({ 
                processing: true,
                serverSide: true,
                order: [],
                stateSave: true,
                ajax: {
                    url: "/production/rejectParetoAjax",
                    type: "POST",
                    data: function ( data ) {
                        data.start_date = startDate
                        data.end_date = endDate
                        data.shift = shift
                    }
                },
                columnDefs: [
                    // { visible: false, targets: [ 2, 6] },
                    { orderable: false, targets: [1] }
                ],
                aoColumns: [
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null
                    ],
                dom:
                "<'row'<'col-lg-12 col-md-12 col-12'B>>" +
                "<'row'<'col-lg-6 col-md-6 col-sm-12 col-12'l><'col-lg-6 col-md-6 col-sm-12 col-12'f>>" +
                "<'row'<'col-lg-12 col-md-12 col-12 table-responsive'tr>>" +
                "<'row'<'col-lg-5 col-md-5 col-12'i><'col-lg-7 col-md-7 col-12'p>>",
                buttons: [{
                        extend:    'copy',
                        text:      '<i class="fa fa-copy"></i>',
                        titleAttr: 'Copy',
                        className: 'btn btn-info'
                    },{
                        extend:    'excel',
                        text:      '<i class="fa fa-file-excel"></i>',
                        titleAttr: 'Excel',
                        className: 'btn btn-success'
                    },{
                        extend:    'pdf',
                        text:      '<i class="fa fa-file-pdf"></i>',
                        titleAttr: 'PDF',
                        className: 'btn btn-danger'
                    },{
                        extend:    'print',
                        text:      '<i class="fa fa-print"></i>',
                        titleAttr: 'Print',
                        className: 'btn btn-warning',
                        exportOptions: {
                            columns: ':visible'
                        },
                        messageTop: 'Alarm'
                    },{
                        extend: 'colvis',
                        className: 'btn btn-default',
                        postfixButtons: ['colvisRestore']
                    }],
                    fade: false,
                language: {
                    buttons: {
                        colvis: 'Columns'
                    },
                    searchPlaceholder: "Search records",
                    search: ""
                }
            })
        })
    })
	

</script>

<%- include(footerPath) %>